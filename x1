Sub EindeutigeSortierungFortlaufendNeu()
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim dict As Object
    Dim Bereich As Variant
    Dim i As Variant
    Dim tempArr() As Variant
    Dim count As Long
    
    Set ws = ThisWorkbook.Sheets("Tabelle1") ' Name des Arbeitsblatts anpassen
    lastRow = ws.Cells(ws.Rows.count, "A").End(xlUp).Row
    
    ' Dictionary für Bereiche
    Set dict = CreateObject("Scripting.Dictionary")
    
    ' Durch alle Zeilen gehen
    For i = 2 To lastRow
        Bereich = ws.Cells(i, 3).Value
        If Not dict.Exists(Bereich) Then
            dict.Add Bereich, New Collection
        End If
        dict(Bereich).Add i ' Zeilennummer merken
    Next i
    
    ' Für jeden Bereich prüfen
    Dim coll As Collection
    For Each Bereich In dict.Keys
        Set coll = dict(Bereich)
        ' Dictionary für doppelte Sortierungen innerhalb Bereich
        Dim sortDict As Object
        Set sortDict = CreateObject("Scripting.Dictionary")
        Dim maxSort As Long
        maxSort = 0
        
        ' Prüfen, welche Sortierungen doppelt vorkommen
        For Each i In coll
            Dim s As Long
            s = ws.Cells(i, 4).Value
            If Not sortDict.Exists(s) Then
                sortDict.Add s, New Collection
            End If
            sortDict(s).Add i
            ' Maximalwert merken
            If s > maxSort Then maxSort = s
        Next i
        
        ' Doppelte Sortierungen alphabetisch neu nummerieren, fortlaufend ab dem Originalwert
        Dim key As Variant
        For Each key In sortDict.Keys
            If sortDict(key).count > 1 Then
                ' Array mit Namen und Zeilen
                ReDim tempArr(1 To sortDict(key).count, 1 To 2)
                count = 1
                For Each i In sortDict(key)
                    tempArr(count, 1) = ws.Cells(i, 1).Value ' Name
                    tempArr(count, 2) = i ' Zeile
                    count = count + 1
                Next i
                
                ' Array nach Name sortieren
                Dim j As Long, k As Long
                Dim tmpName As String, tmpRow As Long
                For j = 1 To UBound(tempArr) - 1
                    For k = j + 1 To UBound(tempArr)
                        If tempArr(j, 1) > tempArr(k, 1) Then
                            tmpName = tempArr(j, 1)
                            tmpRow = tempArr(j, 2)
                            tempArr(j, 1) = tempArr(k, 1)
                            tempArr(j, 2) = tempArr(k, 2)
                            tempArr(k, 1) = tmpName
                            tempArr(k, 2) = tmpRow
                        End If
                    Next k
                Next j
                
                ' Neue Sortierung schreiben, ab dem bestehenden Wert fortlaufend
                For j = 1 To UBound(tempArr)
                    ws.Cells(tempArr(j, 2), 4).Value = key + j - 1
                Next j
            End If
        Next key
    Next Bereich
    
    MsgBox "Sortierung angepasst!"
End Sub

v
Name	Vorname	ID_Bereich	SortierungInnerhalbBereich
Becker	Anna	1	1
Müller	Max	1	1
Schneider	Sophia	1	1
Fischer	Jonas	2	1
Weber	Lara	2	1
Wagner	Leon	2	1
Hoffmann	Mia	3	1
Schäfer	Noah	3	2
Koch	Emma	3	3
Bauer	Elias	4	3
Richter	Hannah	4	2
Klein	Luis	4	1
Wolf	Lea	5	1
Schröder	Finn	5	1
Neumann	Marie	5	1
Krause	Ben	6	1
Zimmermann	Lina	6	1
Hartmann	Paul	6	1
Lange	Emily	7	1
Werner	Niklas	7	2
Schmid	Amelie	7	3
Lehmann	Jan	7	4
Fuchs	Clara	7	4
Kaiser	Felix	7	4
Roth	Johanna	7	4




n
Name	Vorname	ID	S
Becker	Anna	1	1
Müller	Max	1	2
Schneider	Sophia	1	3
Fischer	Jonas	2	1
Weber	Lara	2	3
Wagner	Leon	2	2
Hoffmann	Mia	3	1
Schäfer	Noah	3	2
Koch	Emma	3	3
Bauer	Elias	4	3
Richter	Hannah	4	2
Klein	Luis	4	1
Wolf	Lea	5	3
Schröder	Finn	5	2
Neumann	Marie	5	1
Krause	Ben	6	2
Zimmermann	Lina	6	3
Hartmann	Paul	6	1
Lange	Emily	7	1
Werner	Niklas	7	2
Schmid	Amelie	7	3
Lehmann	Jan	7	6
Fuchs	Clara	7	4
Kaiser	Felix	7	5
Roth	Johanna	7	7
